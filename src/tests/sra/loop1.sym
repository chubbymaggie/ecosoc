base(i32 1) = [1, 1]
base(cmp) = [cmp, cmp]
sigma(redef.i.01)[i.0 :: j.0] isect slt phi(j.0)[argc :: dec] = [0, -1+argc]
base(i32 0) = [0, 0]
phi(sum.0)[i32 0 :: add1] = [0, inf(1)]
base(redef.cmp2) = [cmp, cmp]
phi(i.0)[i32 0 :: inc] = [0, max(argc,0)]
sigma(redef.j.03)[j.0 :: i.0] isect sgt phi(i.0)[i32 0 :: inc] = [1, argc]
add(add)[redef.i.0 :: redef.j.0] = [1, -1+2*argc]
base(argc) = [0, argc]
add(add1)[sum.0 :: add] = [1, inf(1)]
sigma(redef.j.0)[j.0 :: i.0] isect sgt phi(i.0)[i32 0 :: inc] = [1, argc]
base(i32 -1) = [-1, -1]
phi(j.0)[argc :: dec] = [0, argc]
base(redef.cmp) = [cmp, cmp]
add(inc)[redef.i.0 :: i32 1] = [1, argc]
sigma(redef.i.0)[i.0 :: j.0] isect slt phi(j.0)[argc :: dec] = [0, -1+argc]
add(dec)[redef.j.0 :: i32 -1] = [0, -1+argc]
